/*
 * generated by Xtext 2.12.0
 */
grammar InternalMGPL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.udo.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.udo.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.udo.services.MGPLGrammarAccess;

}
@parser::members {
	private MGPLGrammarAccess grammarAccess;

	public void setGrammarAccess(MGPLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProg
entryRuleProg
:
{ before(grammarAccess.getProgRule()); }
	 ruleProg
{ after(grammarAccess.getProgRule()); } 
	 EOF 
;

// Rule Prog
ruleProg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgAccess().getGroup()); }
		(rule__Prog__Group__0)
		{ after(grammarAccess.getProgAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecl
entryRuleDecl
:
{ before(grammarAccess.getDeclRule()); }
	 ruleDecl
{ after(grammarAccess.getDeclRule()); } 
	 EOF 
;

// Rule Decl
ruleDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclAccess().getAlternatives()); }
		(rule__Decl__Alternatives)
		{ after(grammarAccess.getDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDecl
entryRuleVarDecl
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclAccess().getAlternatives()); }
		(rule__VarDecl__Alternatives)
		{ after(grammarAccess.getVarDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInit
entryRuleInit
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitAccess().getGroup()); }
		(rule__Init__Group__0)
		{ after(grammarAccess.getInitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjDecl
entryRuleObjDecl
:
{ before(grammarAccess.getObjDeclRule()); }
	 ruleObjDecl
{ after(grammarAccess.getObjDeclRule()); } 
	 EOF 
;

// Rule ObjDecl
ruleObjDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjDeclAccess().getAlternatives()); }
		(rule__ObjDecl__Alternatives)
		{ after(grammarAccess.getObjDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAssList
entryRuleAttrAssList
:
{ before(grammarAccess.getAttrAssListRule()); }
	 ruleAttrAssList
{ after(grammarAccess.getAttrAssListRule()); } 
	 EOF 
;

// Rule AttrAssList
ruleAttrAssList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssListAccess().getGroup()); }
		(rule__AttrAssList__Group__0)
		{ after(grammarAccess.getAttrAssListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttrAss
entryRuleAttrAss
:
{ before(grammarAccess.getAttrAssRule()); }
	 ruleAttrAss
{ after(grammarAccess.getAttrAssRule()); } 
	 EOF 
;

// Rule AttrAss
ruleAttrAss 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttrAssAccess().getGroup()); }
		(rule__AttrAss__Group__0)
		{ after(grammarAccess.getAttrAssAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getAlternatives()); }
		(rule__Block__Alternatives)
		{ after(grammarAccess.getBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnimBlock
entryRuleAnimBlock
:
{ before(grammarAccess.getAnimBlockRule()); }
	 ruleAnimBlock
{ after(grammarAccess.getAnimBlockRule()); } 
	 EOF 
;

// Rule AnimBlock
ruleAnimBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnimBlockAccess().getGroup()); }
		(rule__AnimBlock__Group__0)
		{ after(grammarAccess.getAnimBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventBlock
entryRuleEventBlock
:
{ before(grammarAccess.getEventBlockRule()); }
	 ruleEventBlock
{ after(grammarAccess.getEventBlockRule()); } 
	 EOF 
;

// Rule EventBlock
ruleEventBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventBlockAccess().getGroup()); }
		(rule__EventBlock__Group__0)
		{ after(grammarAccess.getEventBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKEYSTROKE
entryRuleKEYSTROKE
:
{ before(grammarAccess.getKEYSTROKERule()); }
	 ruleKEYSTROKE
{ after(grammarAccess.getKEYSTROKERule()); } 
	 EOF 
;

// Rule KEYSTROKE
ruleKEYSTROKE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKEYSTROKEAccess().getAlternatives()); }
		(rule__KEYSTROKE__Alternatives)
		{ after(grammarAccess.getKEYSTROKEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmtBlock
entryRuleStmtBlock
:
{ before(grammarAccess.getStmtBlockRule()); }
	 ruleStmtBlock
{ after(grammarAccess.getStmtBlockRule()); } 
	 EOF 
;

// Rule StmtBlock
ruleStmtBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtBlockAccess().getGroup()); }
		(rule__StmtBlock__Group__0)
		{ after(grammarAccess.getStmtBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmt
entryRuleStmt
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtAccess().getAlternatives()); }
		(rule__Stmt__Alternatives)
		{ after(grammarAccess.getStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStmt
entryRuleIfStmt
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStmtAccess().getGroup()); }
		(rule__IfStmt__Group__0)
		{ after(grammarAccess.getIfStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStmt
entryRuleForStmt
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleForStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule ForStmt
ruleForStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStmtAccess().getGroup()); }
		(rule__ForStmt__Group__0)
		{ after(grammarAccess.getForStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssStmt
entryRuleAssStmt
:
{ before(grammarAccess.getAssStmtRule()); }
	 ruleAssStmt
{ after(grammarAccess.getAssStmtRule()); } 
	 EOF 
;

// Rule AssStmt
ruleAssStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssStmtAccess().getGroup()); }
		(rule__AssStmt__Group__0)
		{ after(grammarAccess.getAssStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVar
entryRuleVar
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarAccess().getAlternatives()); }
		(rule__Var__Alternatives)
		{ after(grammarAccess.getVarAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getOrExprParserRuleCall()); }
		ruleOrExpr
		{ after(grammarAccess.getExprAccess().getOrExprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpr
entryRuleOrExpr
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExprAccess().getGroup()); }
		(rule__OrExpr__Group__0)
		{ after(grammarAccess.getOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpr
entryRuleAndExpr
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExprAccess().getGroup()); }
		(rule__AndExpr__Group__0)
		{ after(grammarAccess.getAndExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelExpr
entryRuleRelExpr
:
{ before(grammarAccess.getRelExprRule()); }
	 ruleRelExpr
{ after(grammarAccess.getRelExprRule()); } 
	 EOF 
;

// Rule RelExpr
ruleRelExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelExprAccess().getGroup()); }
		(rule__RelExpr__Group__0)
		{ after(grammarAccess.getRelExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpr
entryRuleAddExpr
:
{ before(grammarAccess.getAddExprRule()); }
	 ruleAddExpr
{ after(grammarAccess.getAddExprRule()); } 
	 EOF 
;

// Rule AddExpr
ruleAddExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExprAccess().getGroup()); }
		(rule__AddExpr__Group__0)
		{ after(grammarAccess.getAddExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultExpr
entryRuleMultExpr
:
{ before(grammarAccess.getMultExprRule()); }
	 ruleMultExpr
{ after(grammarAccess.getMultExprRule()); } 
	 EOF 
;

// Rule MultExpr
ruleMultExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultExprAccess().getGroup()); }
		(rule__MultExpr__Group__0)
		{ after(grammarAccess.getMultExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnExpr
entryRuleUnExpr
:
{ before(grammarAccess.getUnExprRule()); }
	 ruleUnExpr
{ after(grammarAccess.getUnExprRule()); } 
	 EOF 
;

// Rule UnExpr
ruleUnExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnExprAccess().getGroup()); }
		(rule__UnExpr__Group__0)
		{ after(grammarAccess.getUnExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomExpr
entryRuleAtomExpr
:
{ before(grammarAccess.getAtomExprRule()); }
	 ruleAtomExpr
{ after(grammarAccess.getAtomExprRule()); } 
	 EOF 
;

// Rule AtomExpr
ruleAtomExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomExprAccess().getAlternatives()); }
		(rule__AtomExpr__Alternatives)
		{ after(grammarAccess.getAtomExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclAccess().getGroup_0()); }
		(rule__Decl__Group_0__0)
		{ after(grammarAccess.getDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclAccess().getGroup_1()); }
		(rule__Decl__Group_1__0)
		{ after(grammarAccess.getDeclAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_0()); }
		(rule__VarDecl__Group_0__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarDeclAccess().getGroup_1()); }
		(rule__VarDecl__Group_1__0)
		{ after(grammarAccess.getVarDeclAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getGroup_0()); }
		(rule__ObjDecl__Group_0__0)
		{ after(grammarAccess.getObjDeclAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjDeclAccess().getGroup_1()); }
		(rule__ObjDecl__Group_1__0)
		{ after(grammarAccess.getObjDeclAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
		ruleAnimBlock
		{ after(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
		ruleEventBlock
		{ after(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KEYSTROKE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKEYSTROKEAccess().getSpaceKeyword_0()); }
		'space'
		{ after(grammarAccess.getKEYSTROKEAccess().getSpaceKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getKEYSTROKEAccess().getLeftarrowKeyword_1()); }
		'leftarrow'
		{ after(grammarAccess.getKEYSTROKEAccess().getLeftarrowKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getKEYSTROKEAccess().getRightarrowKeyword_2()); }
		'rightarrow'
		{ after(grammarAccess.getKEYSTROKEAccess().getRightarrowKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getKEYSTROKEAccess().getUparrowKeyword_3()); }
		'uparrow'
		{ after(grammarAccess.getKEYSTROKEAccess().getUparrowKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getKEYSTROKEAccess().getDownarrowKeyword_4()); }
		'downarrow'
		{ after(grammarAccess.getKEYSTROKEAccess().getDownarrowKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
		ruleIfStmt
		{ after(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
		ruleForStmt
		{ after(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStmtAccess().getGroup_2()); }
		(rule__Stmt__Group_2__0)
		{ after(grammarAccess.getStmtAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getGroup_0()); }
		(rule__Var__Group_0__0)
		{ after(grammarAccess.getVarAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarAccess().getGroup_1()); }
		(rule__Var__Group_1__0)
		{ after(grammarAccess.getVarAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getLessThanSignKeyword_1_0_0()); }
		'<'
		{ after(grammarAccess.getRelExprAccess().getLessThanSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelExprAccess().getLessThanSignEqualsSignKeyword_1_0_1()); }
		'<='
		{ after(grammarAccess.getRelExprAccess().getLessThanSignEqualsSignKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelExprAccess().getEqualsSignEqualsSignKeyword_1_0_2()); }
		'=='
		{ after(grammarAccess.getRelExprAccess().getEqualsSignEqualsSignKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_0_0()); }
		'+'
		{ after(grammarAccess.getAddExprAccess().getPlusSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddExprAccess().getHyphenMinusKeyword_1_0_1()); }
		'-'
		{ after(grammarAccess.getAddExprAccess().getHyphenMinusKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultExprAccess().getAsteriskKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultExprAccess().getSolidusKeyword_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultExprAccess().getSolidusKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpr__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnExprAccess().getExclamationMarkKeyword_0_0()); }
		'!'
		{ after(grammarAccess.getUnExprAccess().getExclamationMarkKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnExprAccess().getHyphenMinusKeyword_0_1()); }
		'-'
		{ after(grammarAccess.getUnExprAccess().getHyphenMinusKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomExprAccess().getValueAssignment_0()); }
		(rule__AtomExpr__ValueAssignment_0)
		{ after(grammarAccess.getAtomExprAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExprAccess().getGroup_1()); }
		(rule__AtomExpr__Group_1__0)
		{ after(grammarAccess.getAtomExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomExprAccess().getGroup_2()); }
		(rule__AtomExpr__Group_2__0)
		{ after(grammarAccess.getAtomExprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__0__Impl
	rule__Prog__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getGameKeyword_0()); }
	'game'
	{ after(grammarAccess.getProgAccess().getGameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__1__Impl
	rule__Prog__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getNameAssignment_1()); }
	(rule__Prog__NameAssignment_1)
	{ after(grammarAccess.getProgAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__2__Impl
	rule__Prog__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getProgAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__3__Impl
	rule__Prog__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getAtrAssListAssignment_3()); }
	(rule__Prog__AtrAssListAssignment_3)?
	{ after(grammarAccess.getProgAccess().getAtrAssListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__4__Impl
	rule__Prog__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getProgAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__5__Impl
	rule__Prog__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getDeclAssignment_5()); }
	(rule__Prog__DeclAssignment_5)*
	{ after(grammarAccess.getProgAccess().getDeclAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__6__Impl
	rule__Prog__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getStmtBlockAssignment_6()); }
	(rule__Prog__StmtBlockAssignment_6)
	{ after(grammarAccess.getProgAccess().getStmtBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Prog__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgAccess().getBlockAssignment_7()); }
	(rule__Prog__BlockAssignment_7)*
	{ after(grammarAccess.getProgAccess().getBlockAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group_0__0__Impl
	rule__Decl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_0()); }
	ruleVarDecl
	{ after(grammarAccess.getDeclAccess().getVarDeclParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getDeclAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group_1__0__Impl
	rule__Decl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_1_0()); }
	ruleObjDecl
	{ after(grammarAccess.getDeclAccess().getObjDeclParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Decl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getDeclAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_0__0__Impl
	rule__VarDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getIntKeyword_0_0()); }
	'int'
	{ after(grammarAccess.getVarDeclAccess().getIntKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_0__1__Impl
	rule__VarDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getNameAssignment_0_1()); }
	(rule__VarDecl__NameAssignment_0_1)
	{ after(grammarAccess.getVarDeclAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getInitAssignment_0_2()); }
	(rule__VarDecl__InitAssignment_0_2)?
	{ after(grammarAccess.getVarDeclAccess().getInitAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__0__Impl
	rule__VarDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getIntKeyword_1_0()); }
	'int'
	{ after(grammarAccess.getVarDeclAccess().getIntKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__1__Impl
	rule__VarDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getNameAssignment_1_1()); }
	(rule__VarDecl__NameAssignment_1_1)
	{ after(grammarAccess.getVarDeclAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__2__Impl
	rule__VarDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_1_2()); }
	'['
	{ after(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__3__Impl
	rule__VarDecl__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getValueAssignment_1_3()); }
	(rule__VarDecl__ValueAssignment_1_3)
	{ after(grammarAccess.getVarDeclAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDecl__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_1_4()); }
	']'
	{ after(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__0__Impl
	rule__Init__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getInitAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getExprParserRuleCall_1()); }
	ruleExpr
	{ after(grammarAccess.getInitAccess().getExprParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__0__Impl
	rule__ObjDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getOBJTYPETerminalRuleCall_0_0()); }
	RULE_OBJTYPE
	{ after(grammarAccess.getObjDeclAccess().getOBJTYPETerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__1__Impl
	rule__ObjDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getNameAssignment_0_1()); }
	(rule__ObjDecl__NameAssignment_0_1)
	{ after(grammarAccess.getObjDeclAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__2__Impl
	rule__ObjDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_0_2()); }
	'('
	{ after(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__3__Impl
	rule__ObjDecl__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getAttrAssListAssignment_0_3()); }
	(rule__ObjDecl__AttrAssListAssignment_0_3)?
	{ after(grammarAccess.getObjDeclAccess().getAttrAssListAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__0__Impl
	rule__ObjDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getOBJTYPETerminalRuleCall_1_0()); }
	RULE_OBJTYPE
	{ after(grammarAccess.getObjDeclAccess().getOBJTYPETerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__1__Impl
	rule__ObjDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getNameAssignment_1_1()); }
	(rule__ObjDecl__NameAssignment_1_1)
	{ after(grammarAccess.getObjDeclAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__2__Impl
	rule__ObjDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_1_2()); }
	'['
	{ after(grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__3__Impl
	rule__ObjDecl__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getValueAssignment_1_3()); }
	(rule__ObjDecl__ValueAssignment_1_3)
	{ after(grammarAccess.getObjDeclAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjDecl__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_1_4()); }
	']'
	{ after(grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group__0__Impl
	rule__AttrAssList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getAttrAssParserRuleCall_0()); }
	ruleAttrAss
	{ after(grammarAccess.getAttrAssListAccess().getAttrAssParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getGroup_1()); }
	(rule__AttrAssList__Group_1__0)?
	{ after(grammarAccess.getAttrAssListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAssList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group_1__0__Impl
	rule__AttrAssList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getAttrAssListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAssList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssListAccess().getAttrAssListAssignment_1_1()); }
	(rule__AttrAssList__AttrAssListAssignment_1_1)
	{ after(grammarAccess.getAttrAssListAccess().getAttrAssListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAss__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__0__Impl
	rule__AttrAss__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getNameAssignment_0()); }
	(rule__AttrAss__NameAssignment_0)
	{ after(grammarAccess.getAttrAssAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__1__Impl
	rule__AttrAss__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttrAss__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttrAssAccess().getExprAssignment_2()); }
	(rule__AttrAss__ExprAssignment_2)
	{ after(grammarAccess.getAttrAssAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__0__Impl
	rule__AnimBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
	'animation'
	{ after(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__1__Impl
	rule__AnimBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
	(rule__AnimBlock__NameAssignment_1)
	{ after(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__2__Impl
	rule__AnimBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__3__Impl
	rule__AnimBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getOBJTYPETerminalRuleCall_3()); }
	RULE_OBJTYPE
	{ after(grammarAccess.getAnimBlockAccess().getOBJTYPETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__4__Impl
	rule__AnimBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getObjNameAssignment_4()); }
	(rule__AnimBlock__ObjNameAssignment_4)
	{ after(grammarAccess.getAnimBlockAccess().getObjNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__5__Impl
	rule__AnimBlock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimBlock__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimBlockAccess().getStmtBlockAssignment_6()); }
	(rule__AnimBlock__StmtBlockAssignment_6)
	{ after(grammarAccess.getAnimBlockAccess().getStmtBlockAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__0__Impl
	rule__EventBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__1__Impl
	rule__EventBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getKEYSTROKEParserRuleCall_1()); }
	ruleKEYSTROKE
	{ after(grammarAccess.getEventBlockAccess().getKEYSTROKEParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventBlockAccess().getStmtBlockParserRuleCall_2()); }
	ruleStmtBlock
	{ after(grammarAccess.getEventBlockAccess().getStmtBlockParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StmtBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__0__Impl
	rule__StmtBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getStmtBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__1__Impl
	rule__StmtBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getStmtAssignment_1()); }
	(rule__StmtBlock__StmtAssignment_1)*
	{ after(grammarAccess.getStmtBlockAccess().getStmtAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StmtBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getStmtBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group_2__0__Impl
	rule__Stmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2_0()); }
	ruleAssStmt
	{ after(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
	'if ('
	{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getExprParserRuleCall_1()); }
	ruleExpr
	{ after(grammarAccess.getIfStmtAccess().getExprParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getStmtBlockIfAssignment_3()); }
	(rule__IfStmt__StmtBlockIfAssignment_3)
	{ after(grammarAccess.getIfStmtAccess().getStmtBlockIfAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getGroup_4()); }
	(rule__IfStmt__Group_4__0)?
	{ after(grammarAccess.getIfStmtAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__0__Impl
	rule__IfStmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfStmtAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStmt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStmtAccess().getStmtBlockElseAssignment_4_1()); }
	(rule__IfStmt__StmtBlockElseAssignment_4_1)
	{ after(grammarAccess.getIfStmtAccess().getStmtBlockElseAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getForKeyword_0()); }
	'for ('
	{ after(grammarAccess.getForStmtAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getLoopAssSmt1Assignment_1()); }
	(rule__ForStmt__LoopAssSmt1Assignment_1)
	{ after(grammarAccess.getForStmtAccess().getLoopAssSmt1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__2__Impl
	rule__ForStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__3__Impl
	rule__ForStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getLoopExprAssignment_3()); }
	(rule__ForStmt__LoopExprAssignment_3)
	{ after(grammarAccess.getForStmtAccess().getLoopExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__4__Impl
	rule__ForStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__5__Impl
	rule__ForStmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getLoopAssStmt2Assignment_5()); }
	(rule__ForStmt__LoopAssStmt2Assignment_5)
	{ after(grammarAccess.getForStmtAccess().getLoopAssStmt2Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__6__Impl
	rule__ForStmt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStmt__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStmtAccess().getStmtBlockAssignment_7()); }
	(rule__ForStmt__StmtBlockAssignment_7)
	{ after(grammarAccess.getForStmtAccess().getStmtBlockAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__0__Impl
	rule__AssStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getVarParserRuleCall_0()); }
	ruleVar
	{ after(grammarAccess.getAssStmtAccess().getVarParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__1__Impl
	rule__AssStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssStmtAccess().getExprAssignment_2()); }
	(rule__AssStmt__ExprAssignment_2)
	{ after(grammarAccess.getAssStmtAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_0__0__Impl
	rule__Var__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getNameAssignment_0_0()); }
	(rule__Var__NameAssignment_0_0)
	{ after(grammarAccess.getVarAccess().getNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getGroup_0_1()); }
	(rule__Var__Group_0_1__0)?
	{ after(grammarAccess.getVarAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_0_1__0__Impl
	rule__Var__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_0_1_0()); }
	'['
	{ after(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_0_1__1__Impl
	rule__Var__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getExprAssignment_0_1_1()); }
	(rule__Var__ExprAssignment_0_1_1)
	{ after(grammarAccess.getVarAccess().getExprAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_0_1__2__Impl
	rule__Var__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getRightSquareBracketKeyword_0_1_2()); }
	']'
	{ after(grammarAccess.getVarAccess().getRightSquareBracketKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getGroup_0_1_3()); }
	(rule__Var__Group_0_1_3__0)?
	{ after(grammarAccess.getVarAccess().getGroup_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_0_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_0_1_3__0__Impl
	rule__Var__Group_0_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getFullStopKeyword_0_1_3_0()); }
	'.'
	{ after(grammarAccess.getVarAccess().getFullStopKeyword_0_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_0_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_0_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getMemberNameAssignment_0_1_3_1()); }
	(rule__Var__MemberNameAssignment_0_1_3_1)
	{ after(grammarAccess.getVarAccess().getMemberNameAssignment_0_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__0__Impl
	rule__Var__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getObjectNameAssignment_1_0()); }
	(rule__Var__ObjectNameAssignment_1_0)
	{ after(grammarAccess.getVarAccess().getObjectNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__1__Impl
	rule__Var__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getVarAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Var__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarAccess().getMemberNameAssignment_1_2()); }
	(rule__Var__MemberNameAssignment_1_2)
	{ after(grammarAccess.getVarAccess().getMemberNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getExprOrAssignment_0()); }
	(rule__OrExpr__ExprOrAssignment_0)
	{ after(grammarAccess.getOrExprAccess().getExprOrAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
	(rule__OrExpr__Group_1__0)*
	{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getVerticalLineVerticalLineKeyword_1_0()); }
	'||'
	{ after(grammarAccess.getOrExprAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getExprOrAssignment_1_1()); }
	(rule__OrExpr__ExprOrAssignment_1_1)
	{ after(grammarAccess.getOrExprAccess().getExprOrAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getExprAndAssignment_0()); }
	(rule__AndExpr__ExprAndAssignment_0)
	{ after(grammarAccess.getAndExprAccess().getExprAndAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
	(rule__AndExpr__Group_1__0)*
	{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getAmpersandAmpersandKeyword_1_0()); }
	'&&'
	{ after(grammarAccess.getAndExprAccess().getAmpersandAmpersandKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExprAccess().getExprAndAssignment_1_1()); }
	(rule__AndExpr__ExprAndAssignment_1_1)
	{ after(grammarAccess.getAndExprAccess().getExprAndAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group__0__Impl
	rule__RelExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getExprRelAssignment_0()); }
	(rule__RelExpr__ExprRelAssignment_0)
	{ after(grammarAccess.getRelExprAccess().getExprRelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getGroup_1()); }
	(rule__RelExpr__Group_1__0)*
	{ after(grammarAccess.getRelExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__0__Impl
	rule__RelExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getAlternatives_1_0()); }
	(rule__RelExpr__Alternatives_1_0)
	{ after(grammarAccess.getRelExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelExprAccess().getExprRelAssignment_1_1()); }
	(rule__RelExpr__ExprRelAssignment_1_1)
	{ after(grammarAccess.getRelExprAccess().getExprRelAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__0__Impl
	rule__AddExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getExprAddAssignment_0()); }
	(rule__AddExpr__ExprAddAssignment_0)
	{ after(grammarAccess.getAddExprAccess().getExprAddAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getGroup_1()); }
	(rule__AddExpr__Group_1__0)*
	{ after(grammarAccess.getAddExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__0__Impl
	rule__AddExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getAlternatives_1_0()); }
	(rule__AddExpr__Alternatives_1_0)
	{ after(grammarAccess.getAddExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getExprAddAssignment_1_1()); }
	(rule__AddExpr__ExprAddAssignment_1_1)
	{ after(grammarAccess.getAddExprAccess().getExprAddAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group__0__Impl
	rule__MultExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getExprMultAssignment_0()); }
	(rule__MultExpr__ExprMultAssignment_0)
	{ after(grammarAccess.getMultExprAccess().getExprMultAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getGroup_1()); }
	(rule__MultExpr__Group_1__0)*
	{ after(grammarAccess.getMultExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1__0__Impl
	rule__MultExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getAlternatives_1_0()); }
	(rule__MultExpr__Alternatives_1_0)
	{ after(grammarAccess.getMultExprAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultExprAccess().getExprMultAssignment_1_1()); }
	(rule__MultExpr__ExprMultAssignment_1_1)
	{ after(grammarAccess.getMultExprAccess().getExprMultAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnExpr__Group__0__Impl
	rule__UnExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnExprAccess().getAlternatives_0()); }
	(rule__UnExpr__Alternatives_0)?
	{ after(grammarAccess.getUnExprAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnExprAccess().getExprAtomAssignment_1()); }
	(rule__UnExpr__ExprAtomAssignment_1)
	{ after(grammarAccess.getUnExprAccess().getExprAtomAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpr__Group_1__0__Impl
	rule__AtomExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExprAccess().getLeftAssignment_1_0()); }
	(rule__AtomExpr__LeftAssignment_1_0)
	{ after(grammarAccess.getAtomExprAccess().getLeftAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExprAccess().getGroup_1_1()); }
	(rule__AtomExpr__Group_1_1__0)?
	{ after(grammarAccess.getAtomExprAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomExpr__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpr__Group_1_1__0__Impl
	rule__AtomExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExprAccess().getTouchesKeyword_1_1_0()); }
	'touches'
	{ after(grammarAccess.getAtomExprAccess().getTouchesKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpr__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExprAccess().getRightAssignment_1_1_1()); }
	(rule__AtomExpr__RightAssignment_1_1_1)
	{ after(grammarAccess.getAtomExprAccess().getRightAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpr__Group_2__0__Impl
	rule__AtomExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExprAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getAtomExprAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpr__Group_2__1__Impl
	rule__AtomExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExprAccess().getExprAssignment_2_1()); }
	(rule__AtomExpr__ExprAssignment_2_1)
	{ after(grammarAccess.getAtomExprAccess().getExprAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomExprAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getAtomExprAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Prog__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__AtrAssListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getAtrAssListAttrAssListParserRuleCall_3_0()); }
		ruleAttrAssList
		{ after(grammarAccess.getProgAccess().getAtrAssListAttrAssListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__DeclAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getDeclDeclParserRuleCall_5_0()); }
		ruleDecl
		{ after(grammarAccess.getProgAccess().getDeclDeclParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__StmtBlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getStmtBlockStmtBlockParserRuleCall_6_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getProgAccess().getStmtBlockStmtBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Prog__BlockAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgAccess().getBlockBlockParserRuleCall_7_0()); }
		ruleBlock
		{ after(grammarAccess.getProgAccess().getBlockBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__InitAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getInitInitParserRuleCall_0_2_0()); }
		ruleInit
		{ after(grammarAccess.getVarDeclAccess().getInitInitParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclAccess().getValueINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getVarDeclAccess().getValueINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__AttrAssListAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getAttrAssListAttrAssListParserRuleCall_0_3_0()); }
		ruleAttrAssList
		{ after(grammarAccess.getObjDeclAccess().getAttrAssListAttrAssListParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjDeclAccess().getValueINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getObjDeclAccess().getValueINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAssList__AttrAssListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssListAccess().getAttrAssListAttrAssListParserRuleCall_1_1_0()); }
		ruleAttrAssList
		{ after(grammarAccess.getAttrAssListAccess().getAttrAssListAttrAssListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttrAssAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttrAssAccess().getExprExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAttrAssAccess().getExprExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAnimBlockAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__ObjNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getObjNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getAnimBlockAccess().getObjNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__StmtBlockAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimBlockAccess().getStmtBlockStmtBlockParserRuleCall_6_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getAnimBlockAccess().getStmtBlockStmtBlockParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StmtBlock__StmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtBlockAccess().getStmtStmtParserRuleCall_1_0()); }
		ruleStmt
		{ after(grammarAccess.getStmtBlockAccess().getStmtStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__StmtBlockIfAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getStmtBlockIfStmtBlockParserRuleCall_3_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getIfStmtAccess().getStmtBlockIfStmtBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__StmtBlockElseAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStmtAccess().getStmtBlockElseStmtBlockParserRuleCall_4_1_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getIfStmtAccess().getStmtBlockElseStmtBlockParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__LoopAssSmt1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getLoopAssSmt1AssStmtParserRuleCall_1_0()); }
		ruleAssStmt
		{ after(grammarAccess.getForStmtAccess().getLoopAssSmt1AssStmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__LoopExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getLoopExprExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getForStmtAccess().getLoopExprExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__LoopAssStmt2Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getLoopAssStmt2AssStmtParserRuleCall_5_0()); }
		ruleAssStmt
		{ after(grammarAccess.getForStmtAccess().getLoopAssStmt2AssStmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__StmtBlockAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStmtAccess().getStmtBlockStmtBlockParserRuleCall_7_0()); }
		ruleStmtBlock
		{ after(grammarAccess.getForStmtAccess().getStmtBlockStmtBlockParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssStmtAccess().getExprExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getAssStmtAccess().getExprExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__ExprAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getExprExprParserRuleCall_0_1_1_0()); }
		ruleExpr
		{ after(grammarAccess.getVarAccess().getExprExprParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__MemberNameAssignment_0_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getMemberNameIDTerminalRuleCall_0_1_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVarAccess().getMemberNameIDTerminalRuleCall_0_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__ObjectNameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getObjectNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVarAccess().getObjectNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__MemberNameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarAccess().getMemberNameIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getVarAccess().getMemberNameIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__ExprOrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getExprOrAndExprParserRuleCall_0_0()); }
		ruleAndExpr
		{ after(grammarAccess.getOrExprAccess().getExprOrAndExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__ExprOrAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getExprOrAndExprParserRuleCall_1_1_0()); }
		ruleAndExpr
		{ after(grammarAccess.getOrExprAccess().getExprOrAndExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__ExprAndAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExprAccess().getExprAndRelExprParserRuleCall_0_0()); }
		ruleRelExpr
		{ after(grammarAccess.getAndExprAccess().getExprAndRelExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__ExprAndAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExprAccess().getExprAndRelExprParserRuleCall_1_1_0()); }
		ruleRelExpr
		{ after(grammarAccess.getAndExprAccess().getExprAndRelExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__ExprRelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getExprRelAddExprParserRuleCall_0_0()); }
		ruleAddExpr
		{ after(grammarAccess.getRelExprAccess().getExprRelAddExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelExpr__ExprRelAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelExprAccess().getExprRelAddExprParserRuleCall_1_1_0()); }
		ruleAddExpr
		{ after(grammarAccess.getRelExprAccess().getExprRelAddExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__ExprAddAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getExprAddMultExprParserRuleCall_0_0()); }
		ruleMultExpr
		{ after(grammarAccess.getAddExprAccess().getExprAddMultExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__ExprAddAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getExprAddMultExprParserRuleCall_1_1_0()); }
		ruleMultExpr
		{ after(grammarAccess.getAddExprAccess().getExprAddMultExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__ExprMultAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getExprMultUnExprParserRuleCall_0_0()); }
		ruleUnExpr
		{ after(grammarAccess.getMultExprAccess().getExprMultUnExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpr__ExprMultAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultExprAccess().getExprMultUnExprParserRuleCall_1_1_0()); }
		ruleUnExpr
		{ after(grammarAccess.getMultExprAccess().getExprMultUnExprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpr__ExprAtomAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnExprAccess().getExprAtomAtomExprParserRuleCall_1_0()); }
		ruleAtomExpr
		{ after(grammarAccess.getUnExprAccess().getExprAtomAtomExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomExprAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomExprAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__LeftAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomExprAccess().getLeftVarParserRuleCall_1_0_0()); }
		ruleVar
		{ after(grammarAccess.getAtomExprAccess().getLeftVarParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__RightAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomExprAccess().getRightVarParserRuleCall_1_1_1_0()); }
		ruleVar
		{ after(grammarAccess.getAtomExprAccess().getRightVarParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomExpr__ExprAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomExprAccess().getExprExprParserRuleCall_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getAtomExprAccess().getExprExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_OBJTYPE : ('rectangle'|'triangle'|'circle');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
